Exercises part one

1 - Selecione todas as transações feitas pelo cliente chamado "Dave America"
R: db.transactions.aggregate([{$match: {from: "Dave America"}}])

2 - Selecione todas as transações com o valor entre 700 e 6000, ou que sejam recebidas pela cliente "Lisa Simpson".
R: db.transactions.aggregate([{$match: {value: {$gte: 700, $lte: 6000}, to: "Lisa Simpson"}}])

3 - Selecione três transações com o valor acima de 1000
R: db.transactions.aggregate([{$match: {value: {$gt: 1000}}}, {$limit: 3}])

part two

1 - Selecione todos os bancos, ou seja, valores do campo bank ;
R: db.transactions.aggregate([{$group: {_id: "$bank", totalTransactions: {$sum: "$value"}, count: {$sum: 1}}}])

2 - Selecione o valor total das transações em cada banco e quantas são;
R: db.transactions.aggregate([{$group: {_id: "$bank", totalTransactions: {$sum: "$value"}, count: {$sum: 1}}}])

3 - Selecione o valor total de transações por banco;
R: db.transactions.aggregate([{$group: {_id: "$bank", totalTransactions: {$sum: "$value"}}}])

4 - Selecione os bancos que têm o valor total de transações maior que 1000.
R: db.transactions.aggregate([{$group: {_id: "$bank", totalTransactions: {$sum: '$value'}}}, {$match: {"totalTransactions": {$gt: 1000}}}])

part three

1 - Selecione todos os clientes com as suas respectivas transações feitas;
R: db.clients.aggregate([{$lookup: {from: "transactions", localField: "name", foreignField: "from", as: "clients"}}])

2 - Selecione quatro clientes com as suas respectivas transações recebidas
R: db.clients.aggregate([{$lookup: {from: "transactions", localField: "name", foreignField: "from", as: "clients"}}, {$limit: 4}])

3 - Selecione todos os cliente do estado da "Florida" e suas respectivas transações recebidas.
R: db.clients.aggregate([{$match: {State: "Florida"}}, {$lookup: {from: "transactions", localField: "name", foreignField: "from", as: "clients"}}])

Exercícios

Exercício 1: Utilizando o estágio $match , escreva uma agregação para retornar somente os clientes do sexo "MASCULINO" .
R: db.clientes.aggregate([{$match: {sexo: "MASCULINO"}}])

2 - Exercício 2: Utilizando o estágio $match , escreva uma agregação para retornar somente os clientes do sexo "FEMININO" e com data de nascimento entre os anos de 1995 e 2005 .
R: db.clientes.aggregate([{$match: {sexo: "FEMININO", dataNascimento: {$gte: ISODate("1995-01-01"), $lte: ISODate("2005-12-30")}}}])

3 - Exercício 3: Utilizando o estágio $match , escreva uma agregação para retornar somente os clientes do sexo "FEMININO" e com data de nascimento entre os anos de 1995 e 2005 , limitando a quantidade de documentos retornados em 5 .
R: db.clientes.aggregate([{$match: {sexo: "FEMININO", dataNascimento: {$gte: ISODate("1995-01-01"), $lte: ISODate("2005-12-30")}}}, {$limit: 5}])

4 - Exercício 4: Conte quantos clientes do estado SC existem na coleção. Retorne um documento em que o campo _id contenha a UF e outro campo com o total.
R: db.clientes.aggregate([{$match: {"endereco.uf": "SC"}}, {$group: {_id: "$endereco.uf", count: {$sum: 1}}}])
