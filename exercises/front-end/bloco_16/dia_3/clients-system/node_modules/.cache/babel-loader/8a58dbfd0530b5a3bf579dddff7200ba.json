{"ast":null,"code":"var _jsxFileName = \"/home/ropy16/Videos/trybe-exercises/exercises/bloco_16/dia_3/clients-system/src/components/Cadastrados.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteUser } from '../actions/actionCreators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Cadastrados extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      users\n    } = props;\n    this.state = {\n      users: users\n    };\n    this.orderUsers = this.orderUsers.bind(this);\n  }\n\n  orderUsers({\n    target: {\n      checked\n    }\n  }) {\n    const {\n      users\n    } = this.props;\n    const copyUsers = [...users];\n\n    if (checked) {\n      this.setState({\n        users: copyUsers.sort((a, b) => a.nome.toLowerCase().charCodeAt(0) - b.nome.toLowerCase().charCodeAt(0))\n      });\n    } else {\n      this.setState({\n        users: users\n      });\n    }\n  }\n\n  render() {\n    const {\n      users\n    } = this.state;\n    const {\n      deleteUser\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '150px'\n      },\n      children: [users.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: this.orderUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \"Ordenar alfabeticamente\"]\n      }, void 0, true), users.length ? users.map(({\n        nome,\n        email\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [nome, \", \", email, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              deleteUser(nome);\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, email, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#252525'\n        },\n        children: \"Nenhum cliente cadastrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          color: '#eee',\n          background: '#252525',\n          padding: '4px',\n          borderRadius: '5px',\n          textDecoration: 'none'\n        },\n        to: \"/cadastrar\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  userReducer\n}) => ({\n  users: userReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteUser: user => dispatch(deleteUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cadastrados);","map":{"version":3,"sources":["/home/ropy16/Videos/trybe-exercises/exercises/bloco_16/dia_3/clients-system/src/components/Cadastrados.jsx"],"names":["React","Component","Link","connect","deleteUser","Cadastrados","constructor","props","users","state","orderUsers","bind","target","checked","copyUsers","setState","sort","a","b","nome","toLowerCase","charCodeAt","render","textAlign","marginTop","length","map","email","color","background","padding","borderRadius","textDecoration","mapStateToProps","userReducer","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { deleteUser } from '../actions/actionCreators'\n\nclass Cadastrados extends Component {\n  constructor(props) {\n    super(props)\n    const { users } = props\n    this.state = {\n      users: users,\n    }\n    this.orderUsers = this.orderUsers.bind(this)\n  }\n\n  orderUsers({ target: { checked } }) {\n    const { users } = this.props\n    const copyUsers = [...users]\n    if (checked) {\n      this.setState({\n        users: copyUsers.sort(\n          (a, b) =>\n            a.nome.toLowerCase().charCodeAt(0) -\n            b.nome.toLowerCase().charCodeAt(0),\n        ),\n      })\n    } else {\n      this.setState({ users: users })\n    }\n  }\n\n  render() {\n    const { users } = this.state\n    const { deleteUser } = this.props\n    return (\n      <div style={{ textAlign: 'center', marginTop: '150px' }}>\n        {users.length > 0 && (\n          <>\n            <input type=\"checkbox\" onChange={this.orderUsers} />\n            Ordenar alfabeticamente\n          </>\n        )}\n        {users.length ? (\n          users.map(({ nome, email }) => (\n            <>\n              <h3 key={email}>\n                {nome}, {email}{' '}\n                <span\n                  onClick={() => {\n                    deleteUser(nome)\n                    \n                  }}\n                >\n                  X\n                </span>\n              </h3>\n            </>\n          ))\n        ) : (\n          <h1 style={{ color: '#252525' }}>Nenhum cliente cadastrado</h1>\n        )}\n        <Link\n          style={{\n            color: '#eee',\n            background: '#252525',\n            padding: '4px',\n            borderRadius: '5px',\n            textDecoration: 'none',\n          }}\n          to=\"/cadastrar\"\n        >\n          Cadastrar\n        </Link>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ userReducer }) => ({\n  users: userReducer,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteUser: (user) => dispatch(deleteUser(user)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cadastrados)\n"]},"metadata":{},"sourceType":"module"}