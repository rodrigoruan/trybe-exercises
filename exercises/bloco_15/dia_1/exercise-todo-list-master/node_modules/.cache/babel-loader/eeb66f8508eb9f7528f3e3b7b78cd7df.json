{"ast":null,"code":"var _jsxFileName = \"/home/ropy16/Videos/trybe-exercises/exercises/bloco_15/exercise-todo-list-master/src/App.js\";\nimport React, { Component } from 'react';\nimport InputTodo from './InputTodo';\nimport Item from './Item';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listTodo: [],\n      selectedTask: ''\n    };\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  selectTask({\n    target\n  }) {\n    console.log(target); // this.setState({ selectedTask: value });\n  }\n\n  addTodo(todo) {\n    this.setState(state => ({\n      listTodo: [...state.listTodo, todo]\n    }));\n  }\n\n  render() {\n    const {\n      listTodo\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InputTodo, {\n      addTodo: todo => this.addTodo(todo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), listTodo && /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, listTodo.map((todo, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      onClick: this.selectTask,\n      content: todo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ropy16/Videos/trybe-exercises/exercises/bloco_15/exercise-todo-list-master/src/App.js"],"names":["React","Component","InputTodo","Item","App","constructor","props","state","listTodo","selectedTask","addTodo","bind","selectTask","target","console","log","todo","setState","render","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAKA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDC,EAAAA,UAAU,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAa;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADqB,CAErB;AACD;;AAEDH,EAAAA,OAAO,CAACM,IAAD,EAAO;AACZ,SAAKC,QAAL,CAAeV,KAAD,KAAY;AAAEC,MAAAA,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACC,QAAV,EAAoBQ,IAApB;AAAZ,KAAZ,CAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAGS,IAAD,IAAU,KAAKN,OAAL,CAAaM,IAAb,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGR,QAAQ,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAACW,GAAT,CAAa,CAACH,IAAD,EAAOI,KAAP,kBACZ;AAAI,MAAA,GAAG,EAAEA,KAAK,GAAG,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKR,UAApB;AAAgC,MAAA,OAAO,EAAEI,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CAHJ,CADF;AAcD;;AArCyB;;AAuC5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport InputTodo from './InputTodo';\nimport Item from './Item';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      listTodo: [],\n      selectedTask: '',\n    };\n\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  selectTask({ target }) {\n    console.log(target)\n    // this.setState({ selectedTask: value });\n  }\n\n  addTodo(todo) {\n    this.setState((state) => ({ listTodo: [...state.listTodo, todo] }));\n  }\n\n  render() {\n    const { listTodo } = this.state;\n    return (\n      <div className='App'>\n        <InputTodo addTodo={(todo) => this.addTodo(todo)} />\n        {listTodo && (\n          <ul>\n            {listTodo.map((todo, index) => (\n              <li key={index + 1}>\n                <Item onClick={this.selectTask} content={todo} />\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}